{
  "comments": [
    {
      "key": {
        "uuid": "d93862b7_16a73e7b",
        "filename": "ro_core/config/config_test.go",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-11-15T15:26:38Z",
      "side": 1,
      "message": "Should the test be skipped if the function signature is not the same?   Shouldn\u0027t it be an error?",
      "revId": "0d6a8883327b5eaf3776fdc731dc34d77dc3db57",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c343f74_17aff40d",
        "filename": "ro_core/config/config_test.go",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2019-11-15T15:54:10Z",
      "side": 1,
      "message": "how does the test validate the state change caused by this invocation? i.e. how do we give the parser a set of flags and then verify that it set the proper configuration in terms of a positive test? in terms of a negative test how to do give it a set of arguments that are not valid flags and verify it returns an error?",
      "range": {
        "startLine": 67,
        "startChar": 13,
        "endLine": 67,
        "endChar": 34
      },
      "revId": "0d6a8883327b5eaf3776fdc731dc34d77dc3db57",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c0e3eab_9d728602",
        "filename": "ro_core/config/config_test.go",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2019-11-15T15:54:10Z",
      "side": 1,
      "message": "We need to test more than not nil perhaps? Is there a way to verify that we get a valid value or the \"expected\" value?",
      "range": {
        "startLine": 73,
        "startChar": 12,
        "endLine": 73,
        "endChar": 28
      },
      "revId": "0d6a8883327b5eaf3776fdc731dc34d77dc3db57",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}