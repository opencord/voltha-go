{
  "comments": [
    {
      "key": {
        "uuid": "7aeede96_c869c05b",
        "filename": "rw_core/core/logical_device_agent.go",
        "patchSetId": 3
      },
      "lineNbr": 1403,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-08-15T13:12:30Z",
      "side": 1,
      "message": "At this stage the device should be in enabled state.   If the device is disabled or deleted (temp state) then we do not want this action to take place.   Do we want to allow addition of logical ports on a disabled device?\n\nRemoving the operational status check and creating the logical ports would imply that some flows (default from ONOS?) relevant to that UNI will be sent down.   Would that be ok?  If those flows are only on the parent device then that should be ok.\n\nIf the child device is not fully operational then would the call below (getPortCapability) succeed?",
      "revId": "1fe5a1040f2007eff21d64b87c68c707e40e69e6",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f148b26_8553a599",
        "filename": "rw_core/core/logical_device_agent.go",
        "patchSetId": 3
      },
      "lineNbr": 1403,
      "author": {
        "id": 1000436
      },
      "writtenOn": "2019-08-15T13:32:29Z",
      "side": 1,
      "message": "So it depends on the adapter implementation.   In the onu adapter\u0027s case its call to getPortCapability would succeed as the onu has already called port_created to the core.  The difference would be that the getPortCapability call on a not fully up (device oper_status down/activating/discovered) adapter would return the logical port as DOWN rather than LIVE.  This being DOWN also prevents onos from pushing flows to the logical port.  But at least the ports are visible.\n\nAnother scenario is more general.  An example would be a switch ports on an card in a chassis.  The card and its ports may be operationally down and even the card and its ports admin down, but it still reports that it has (albeit down) ports.\n\nI agree it puts more on the adapter to do the right thing or northbound things will happen that the adapter or device is not ready for.  See this accompanying patch to the onu adapter: https://gerrit.opencord.org/#/c/14960/  \n\n\nThe onu turn up process (for 1.x) was before setting the device to active it would add uni logical ports (as DOWN).  then at the moment the onu device is set to active all the ports would change their state to active.  In the old core the UNI ports would set and keep their own logical state.  In the new core that behavior just needs to be reflected in getPortCapability.  If an adapter does not report back properly (UP when its really DOWN), bad things would happen.",
      "parentUuid": "7aeede96_c869c05b",
      "revId": "1fe5a1040f2007eff21d64b87c68c707e40e69e6",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}