{
  "comments": [
    {
      "key": {
        "uuid": "ec039a5f_9bb1dca7",
        "filename": "rw_core/core/device_manager.go",
        "patchSetId": 1
      },
      "lineNbr": 1164,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-03-20T19:52:55Z",
      "side": 1,
      "message": "technically this method can now never return an error, so may not need the return value at all. Also, is there a specific error that we want to ignore, i.e. not-found, vs. ignore all errors?\n\nI think this is similar for the other changes as well.",
      "range": {
        "startLine": 1161,
        "startChar": 0,
        "endLine": 1164,
        "endChar": 2
      },
      "revId": "e132f52763eb67dccda5d05fc2af4e0086740dc3",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81455d65_90668c7c",
        "filename": "rw_core/core/device_manager.go",
        "patchSetId": 1
      },
      "lineNbr": 1164,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-03-20T19:58:36Z",
      "side": 1,
      "message": "It follows the method signatures of callbacks.  So cannot remove the errors.\n\nIdeally if we have specific errors (eg. NotFoundError, etc) then the check is cleaner.  Now we have to compare strings which is not very clean.",
      "parentUuid": "ec039a5f_9bb1dca7",
      "range": {
        "startLine": 1161,
        "startChar": 0,
        "endLine": 1164,
        "endChar": 2
      },
      "revId": "e132f52763eb67dccda5d05fc2af4e0086740dc3",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ddb0563_d073d53e",
        "filename": "rw_core/core/device_manager.go",
        "patchSetId": 1
      },
      "lineNbr": 1241,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-03-20T20:21:34Z",
      "side": 1,
      "message": "No longer need to pre-declare err, can just use `:\u003d`.",
      "revId": "e132f52763eb67dccda5d05fc2af4e0086740dc3",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9046e8dc_d138e8a7",
        "filename": "rw_core/core/device_manager.go",
        "patchSetId": 1
      },
      "lineNbr": 1263,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-03-20T20:21:34Z",
      "side": 1,
      "message": "Again, no longer need to pre-declare err.",
      "revId": "e132f52763eb67dccda5d05fc2af4e0086740dc3",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb02b6b7_edf34f38",
        "filename": "rw_core/core/device_manager.go",
        "patchSetId": 1
      },
      "lineNbr": 1283,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-03-20T20:21:34Z",
      "side": 1,
      "message": "If function can no longer return an error, should this be propagated?",
      "range": {
        "startLine": 1283,
        "startChar": 115,
        "endLine": 1283,
        "endChar": 120
      },
      "revId": "e132f52763eb67dccda5d05fc2af4e0086740dc3",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c5f4533_a64a22c3",
        "filename": "rw_core/core/device_manager.go",
        "patchSetId": 1
      },
      "lineNbr": 1293,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-03-20T20:21:34Z",
      "side": 1,
      "message": "If function can no longer return an error, should this be propagated?",
      "range": {
        "startLine": 1293,
        "startChar": 120,
        "endLine": 1293,
        "endChar": 125
      },
      "revId": "e132f52763eb67dccda5d05fc2af4e0086740dc3",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92b533ad_0ff463fe",
        "filename": "rw_core/core/device_manager.go",
        "patchSetId": 1
      },
      "lineNbr": 1545,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-03-20T20:21:34Z",
      "side": 1,
      "message": "If function can no longer return an error, should this be propagated?",
      "range": {
        "startLine": 1545,
        "startChar": 106,
        "endLine": 1545,
        "endChar": 111
      },
      "revId": "e132f52763eb67dccda5d05fc2af4e0086740dc3",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}