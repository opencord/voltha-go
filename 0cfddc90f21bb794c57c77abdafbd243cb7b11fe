{
  "comments": [
    {
      "key": {
        "uuid": "0c69bd26_a292a9c7",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 11
      },
      "lineNbr": 368,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-01-06T15:39:12Z",
      "side": 1,
      "message": "Don\u0027t recall if I mentioned this before, but my preference would be to add the rpc name as a metadata in the context object when a request is received, either northbound or southbound.  Since we are reporting RPC errors onto the kafka bus then it would be good to make sure we are using the right RPC whenever an error needs to be reported.  The context object is the right place for that.  \n\nWhen a new context gets created (especially for background task) then the RPC metadata can be copied to the new context.",
      "revId": "0cfddc90f21bb794c57c77abdafbd243cb7b11fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64c41c65_f67e3d13",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 11
      },
      "lineNbr": 368,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-01-07T07:33:14Z",
      "side": 1,
      "message": "Yes we had discussed using context metadata for rpc name, but there is a drawback for that, i.e., context metadata need to be filled by the client(voltctl, nem, or southbound) and the key name would be some hardcoded key. If the client fails to send the key with exact name, we wont have the rpc name. Also since it is only required in the core, thats why I am passing the rpc name from the respective call",
      "parentUuid": "0c69bd26_a292a9c7",
      "revId": "0cfddc90f21bb794c57c77abdafbd243cb7b11fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d208985_bbb9d39e",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 11
      },
      "lineNbr": 368,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-01-07T14:30:59Z",
      "side": 1,
      "message": "Since this is within the realm of the core then when a request is received into the Core (northbound or southbound), the rpc name gets added as a metadata to the context object at that point (for grpc you may check whether you can extract the rpc name directly from the grpc call, if possible.  Otherwise, just using that API name at that entry point is ok).  This way the rpc name is always available wherever that context is used.  This will eliminate the risk of publishing the incorrect rpc name (currently it is \"hardcoded\" to an internal function name).",
      "parentUuid": "64c41c65_f67e3d13",
      "revId": "0cfddc90f21bb794c57c77abdafbd243cb7b11fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92385937_e0dee284",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 11
      },
      "lineNbr": 368,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-01-07T14:39:08Z",
      "side": 1,
      "message": "Should not the metadata be added at the client side i.e. voltctl or NEM",
      "parentUuid": "6d208985_bbb9d39e",
      "revId": "0cfddc90f21bb794c57c77abdafbd243cb7b11fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d6406c3_3a727ef9",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 11
      },
      "lineNbr": 368,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-01-07T15:12:55Z",
      "side": 1,
      "message": "Nope, this is internal to the Core.  It would be somewhat redundant for the client to add an rpc name to the metadata when invoking that rpc.  The Core can augment the context, similarly to how context gets augmented to include operation IDs.   Remember that southbound requests are over kafka.",
      "parentUuid": "92385937_e0dee284",
      "revId": "0cfddc90f21bb794c57c77abdafbd243cb7b11fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d859d66_8ea2af9d",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 11
      },
      "lineNbr": 368,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-01-18T13:01:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d6406c3_3a727ef9",
      "revId": "0cfddc90f21bb794c57c77abdafbd243cb7b11fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a934d272_342b60de",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 11
      },
      "lineNbr": 1624,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2021-01-04T09:26:11Z",
      "side": 1,
      "message": "this at the moment blocks if there is some issue on the Kafka bus thus hailing the operation that issued it, please at least put it in a go routine.",
      "revId": "0cfddc90f21bb794c57c77abdafbd243cb7b11fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8d2c0be_7f143346",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 11
      },
      "lineNbr": 1624,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-01-07T07:33:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a934d272_342b60de",
      "revId": "0cfddc90f21bb794c57c77abdafbd243cb7b11fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}