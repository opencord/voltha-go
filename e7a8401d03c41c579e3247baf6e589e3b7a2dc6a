{
  "comments": [
    {
      "key": {
        "uuid": "710a192d_6dede792",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-05-27T16:01:55Z",
      "side": 1,
      "message": "Need a mutex here",
      "revId": "e7a8401d03c41c579e3247baf6e589e3b7a2dc6a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5c9fbb6_29c38fdd",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-05-27T16:01:55Z",
      "side": 1,
      "message": "This won\u0027t work.  As part of the state machine the delete logical ports are invoked before the deletion of the logical device.   In the new code to delete logical ports there is a check on the portDeletionCh which won\u0027t exist at the time that code was invoked.   Hence this code here will never receive a port deletion notification - that\u0027s why it has a sleep of 1 second to keep going.",
      "revId": "e7a8401d03c41c579e3247baf6e589e3b7a2dc6a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b141b8c_3d782a33",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2021-05-28T15:52:58Z",
      "side": 1,
      "message": "thanks for the review khen, this is not the observation I made in the code. I\u0027ve been observing that the two methods are not synchronised and no order is guaranteed. As you can see from the following logs the signaling actually happens on the device delete:\n\n{\"level\":\"info\",\"ts\":\"2021-05-28T10:34:34.588Z\",\"caller\":\"state/transitions.go:427\",\"msg\":\"deviceType:1-deviceId:4416bdd7-2f73-42d7-91cd-3d20f3ae73df-previous:{ENABLED REACHABLE ACTIVE DELETING_FROM_ADAPTER}-current:{ENABLED REACHABLE ACTIVE DELETING_POST_ADAPTER_RESPONSE}\",\"instanceId\":\"voltha1-voltha-rw-core-5d9c86cc97-g4rnt\",\"pkg\":\"state\",\"op-id\":\"1e2c64361cd7c5ac\",\"op-name\":\"/voltha.VolthaService/DeleteDevice\",\"device-id\":\"e098e66a-2052-48d8-97e3-b92ec2f2d2f6\"}\n{\"level\":\"info\",\"ts\":\"2021-05-28T10:34:34.602Z\",\"caller\":\"device/logical_manager.go:410\",\"msg\":\"signaling-logical-ports-deletion-end\",\"instanceId\":\"voltha1-voltha-rw-core-5d9c86cc97-g4rnt\",\"op-id\":\"1e2c64361cd7c5ac\",\"op-name\":\"/voltha.VolthaService/DeleteDevice\",\"device-id\":\"e098e66a-2052-48d8-97e3-b92ec2f2d2f6\",\"logical-device-id\":\"34a10d02-fca9-4b03-9e84-d0a46131c49a\"}\n{\"level\":\"info\",\"ts\":\"2021-05-28T10:34:34.602Z\",\"caller\":\"device/logical_manager.go:264\",\"msg\":\"deleted-all-ports-proceeding-with-logical-device-deletion\",\"instanceId\":\"voltha1-voltha-rw-core-5d9c86cc97-g4rnt\",\"device-id\":\"e098e66a-2052-48d8-97e3-b92ec2f2d2f6\",\"op-id\":\"1e2c64361cd7c5ac\",\"op-name\":\"/voltha.VolthaService/DeleteDevice\",\"device-id\":\"e098e66a-2052-48d8-97e3-b92ec2f2d2f6\"}\n\nunless something else is wrong in the code the channel will be present, if not present then it will reset to the 1 second.",
      "parentUuid": "f5c9fbb6_29c38fdd",
      "revId": "e7a8401d03c41c579e3247baf6e589e3b7a2dc6a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0901e93_70d6b658",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-05-28T18:05:19Z",
      "side": 1,
      "message": "A few pointers:  \n\n1) deleteLogicalDevice is invoked when an OLT device is deleted and is part of this sequence of APIs: {dMgr.DeleteAllLogicalPorts, dMgr.DeleteAllChildDevices, dMgr.DeleteLogicalDevice, dMgr.RunPostDeviceDelete}\n\n2) deleteLogicalPorts() (below) is invoked after a child device is deleted and is part of this sequence: {dMgr.ChildDeviceLost, dMgr.DeleteLogicalPorts, dMgr.RunPostDeviceDelete}})  \n\n3) To have the logs above, imply that deleteLogicalPorts() was invoked after dMgr.DeleteAllChildDevices() when a parent device was being deleted.   \n\n4) Note that the call to dMgr.DeleteAllChildDevices happens before dMgr.DeleteLogicalDevice.  However, the call to  deleteLogicalPorts(), being part of a callback after a device is deleted, can happen at the same time as the call to dMgr.DeleteLogicalDevice.\n\n5) Therefore we can get in the case where deleteLogicalPorts() is invoked before executing dMgr.DeleteLogicalDevice.  In such a case, dMgr.DeleteLogicalDevice will wait forever (or bail out with the 1 second sleep).  If you remove the sleep, you will see the wait over multiple runs, i.e. a race condition.\n\n6) The logs above show a case when the executing the deleteLogicalPorts() happens after dMgr.DeleteLogicalDevice. But this won\u0027t always be the case.",
      "parentUuid": "3b141b8c_3d782a33",
      "revId": "e7a8401d03c41c579e3247baf6e589e3b7a2dc6a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6afa9b98_6221dffa",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 404,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-05-28T18:05:19Z",
      "side": 1,
      "message": "There can be multiple devices on this OLT.  This function is invoked only when all ports off 1 child device is deleted.   If we are waiting for all logical ports off the logical device to be deleted first (I would think that\u0027s the expectation) then this change won\u0027t do the trick.",
      "revId": "e7a8401d03c41c579e3247baf6e589e3b7a2dc6a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8f72b83_bf7b03bb",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 404,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-05-28T18:11:09Z",
      "side": 1,
      "message": "The DeleteAllLogicalPorts() should have sent all the logical port deletion events to ONOS before the logical device is deleted.  Are you seeing an issue where ONOS does not receive all the logical port delete events?",
      "parentUuid": "6afa9b98_6221dffa",
      "revId": "e7a8401d03c41c579e3247baf6e589e3b7a2dc6a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    }
  ]
}