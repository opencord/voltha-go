{
  "comments": [
    {
      "key": {
        "uuid": "2d082db6_21b2d2b9",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-04-07T18:56:29Z",
      "side": 1,
      "message": "The previous model had the ability of compressing the data before storing it in the KV store.  This has the benefit of reducing the data size in KV as well as having a faster data sync amongst the etcd servers in a cluster.  Should that option be added here?",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7308d26_0565fd05",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-04-07T20:58:25Z",
      "side": 1,
      "message": "Though gzip compression existed in the code, it was always disabled (the flag gating it had no writes).  \nThis functionality could be added, but should probably be considered in a separate Jira.",
      "parentUuid": "2d082db6_21b2d2b9",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a55285b2_3e423fcf",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-04-07T18:56:29Z",
      "side": 1,
      "message": "The comment may need to mention that the target will contain the List result since usually a List/Get request will have the result in the return params instead of the passed-in param.",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f43f7349_5460acde",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-04-07T20:58:25Z",
      "side": 1,
      "message": "Sure, will update.",
      "parentUuid": "a55285b2_3e423fcf",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4b16686_a65acc19",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-04-07T18:56:29Z",
      "side": 1,
      "message": "Since the Update/AddWith invokes the Add method is there a risk where an update request passes in an incorrect path leading to an existing data being overwritten?   Should there be additional checks in place in these methods?",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e74ab932_92d19fc3",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-04-07T20:58:25Z",
      "side": 1,
      "message": "The current AddWithID/Update terminology is confusing, I would like to improve this in a future patch.  Paths should really be defined using a hierarchy of proxies.\n\nThere\u0027s always the possibility that this could be used incorrectly, but I think that possibility is minimal.\n\n(TL;DR: will fix in a future patch.)",
      "parentUuid": "d4b16686_a65acc19",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e61f9dcb_972ca566",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-04-08T15:12:16Z",
      "side": 1,
      "message": "I suggest that any change that needs to happen in the Core with respect to interacting with the model gets done in this update.   There are a number of features/bug fixes that need to happen in the Core.  If we keep refactoring then we will end up with lots of retests and possible regressions.",
      "parentUuid": "e74ab932_92d19fc3",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b7e0f08_3a2e80f1",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-04-08T15:25:20Z",
      "side": 1,
      "message": "Doing everything in this one patch is impractical.  \n\nMany of the changes that should be made [to the model] touch more code outside the model (for example, a hierarchy of proxies will require changes everywhere proxies are used.)\n\nI would rather submit byte-sized changes instead of trying to merge a massive change all at once.  This is easier to review \u0026 reduces rebasing.  Other contributors should be doing the same.\n\n(As it is, I\u0027m already dealing with constant rebasing to keep this patch (\u0026 dependent patches) up to date w/ master.)",
      "parentUuid": "e61f9dcb_972ca566",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7d75244_d1219b00",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-04-08T15:35:36Z",
      "side": 1,
      "message": "Is there a way for these Core changes to be made and within the model for now just point to the same proxy and then later on any major changes limited to the model?",
      "parentUuid": "0b7e0f08_3a2e80f1",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f41260fd_443f875d",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-04-08T16:01:26Z",
      "side": 1,
      "message": "I\u0027d prefer to keep these changes separate for documentation purposes.  \n\nHaving the minimal number of changes in one patch, and separating unrelated changes where feasible.\n\nThere\u0027s the model simplification changes (this patch), and the proxy usability changes (future patch).\n\nI\u0027d rather not conflate these issues.  They are distinct, even if they touch similar code.",
      "parentUuid": "a7d75244_d1219b00",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa08d3d_813dc9c8",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-04-08T16:07:36Z",
      "side": 1,
      "message": "As long as the proxy usability changes in the Core is not huge then that\u0027s ok.",
      "parentUuid": "f41260fd_443f875d",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccc20343_266b6441",
        "filename": "db/model/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-04-08T16:46:44Z",
      "side": 1,
      "message": "Should be a comparatively small change.",
      "parentUuid": "3aa08d3d_813dc9c8",
      "revId": "59ef90d4195b2eb4ccccf2280ad23d271d3c9d6f",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}