{
  "comments": [
    {
      "key": {
        "uuid": "08ca2531_a6c34cf0",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Should this lookup be per-flow so that there isn\u0027t a list of flows to search through after the lookup?",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 63,
        "endChar": 22
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f93a0e6f_38138e9a",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Consider naming just `meters`, `groups` instead of `meterIDToMeterMap`, `groupIDToGroupMap`.",
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1abe1ed7_c74fc4ed",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 73,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "This lock appears to be used to synchronize access to the KV, not the local struct.  Is this the case?  Consider naming it `dbLock`, or similar.",
      "range": {
        "startLine": 73,
        "startChar": 1,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51de04ca_03489167",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 79,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "dbLock?",
      "range": {
        "startLine": 79,
        "startChar": 1,
        "endLine": 79,
        "endChar": 5
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cceb5be2_4d61dc63",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 85,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "dbLock?",
      "range": {
        "startLine": 85,
        "startChar": 1,
        "endLine": 85,
        "endChar": 5
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80519d28_472e167c",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 296,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Consider `flows` instead of `logical_flows`?",
      "range": {
        "startLine": 296,
        "startChar": 22,
        "endLine": 296,
        "endChar": 35
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b227e44f_d784ac47",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 712,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "stringconv.Itoa(meterMod.MeterId)",
      "range": {
        "startLine": 712,
        "startChar": 12,
        "endLine": 712,
        "endChar": 47
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bb18ff0_6409f817",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 719,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "` \u003d \u0026MeterChunk{meter: meterEntry}`?",
      "range": {
        "startLine": 719,
        "startChar": 43,
        "endLine": 719,
        "endChar": 52
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf2464fc_c8b95324",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 760,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "This is the only usage of meterModifyInModel()\n\nDoesn\u0027t need to be two separate functions; should be inlined?",
      "range": {
        "startLine": 757,
        "startChar": 14,
        "endLine": 760,
        "endChar": 45
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6869e6e6_d202b218",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 785,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Defer called in for loop.\n\nDefers only run when the whole function returns, so should not generally be called in loops.\n\nUse regular Lock/Unlock instead of Lock/defer-Unlock.",
      "range": {
        "startLine": 785,
        "startChar": 2,
        "endLine": 785,
        "endChar": 27
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f98891_c94b03dc",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 1149,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Missing a `agent.flowsLock.RUnlock()`",
      "range": {
        "startLine": 1149,
        "startChar": 4,
        "endLine": 1149,
        "endChar": 14
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "101b650e_c44d36d3",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 1461,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Spelling: should be `affected` not `effected`.",
      "range": {
        "startLine": 1461,
        "startChar": 1,
        "endLine": 1461,
        "endChar": 14
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b509f2f_2474683e",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 1470,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Shouldn\u0027t use defer in loops.",
      "range": {
        "startLine": 1470,
        "startChar": 3,
        "endLine": 1470,
        "endChar": 33
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6e0aa7b_1f199991",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 1551,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "use :\u003d to avoid pre-declaring err.",
      "range": {
        "startLine": 1551,
        "startChar": 10,
        "endLine": 1551,
        "endChar": 11
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fe97ff6_3476294d",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 1559,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "always nil here, just return nil",
      "range": {
        "startLine": 1559,
        "startChar": 22,
        "endLine": 1559,
        "endChar": 25
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90f337cf_d954fa74",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2125,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "\"FromModel\" doesn\u0027t really make sense anymore.  Just use \"loadFlows()\"?",
      "range": {
        "startLine": 2125,
        "startChar": 36,
        "endLine": 2125,
        "endChar": 45
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c063e0c7_408e5bed",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2127,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Can lock after db read instead?",
      "range": {
        "startLine": 2126,
        "startChar": 1,
        "endLine": 2127,
        "endChar": 31
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e94d2906_a097b174",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2148,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "`loadMeters`?",
      "range": {
        "startLine": 2148,
        "startChar": 27,
        "endLine": 2148,
        "endChar": 46
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4e5fd66_224548d7",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2150,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Can lock after db read instead?",
      "range": {
        "startLine": 2149,
        "startChar": 1,
        "endLine": 2150,
        "endChar": 31
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "202b139d_4d72553a",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2167,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "`loadGroups`?",
      "range": {
        "startLine": 2167,
        "startChar": 27,
        "endLine": 2167,
        "endChar": 46
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b57213e0_c6d55cf2",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2169,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Can lock after db read instead?",
      "range": {
        "startLine": 2168,
        "startChar": 1,
        "endLine": 2169,
        "endChar": 31
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "595dceb6_fcacb332",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2204,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Just \u0026ofp.Flows{} ?",
      "range": {
        "startLine": 2204,
        "startChar": 97,
        "endLine": 2204,
        "endChar": 113
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1f9eaae_a8e4387d",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2211,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "return \u0026FlowsChunk{\n\tflows: \u0026ofp.Flows{},\n}\n\n(more like this)",
      "range": {
        "startLine": 2211,
        "startChar": 9,
        "endLine": 2211,
        "endChar": 19
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fbb4f1f_d884db8f",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2214,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "`deleteFlows`?",
      "range": {
        "startLine": 2214,
        "startChar": 27,
        "endLine": 2214,
        "endChar": 47
      },
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6641c29c_fc17a5fb",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 14
      },
      "lineNbr": 2268,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-05T17:53:52Z",
      "side": 1,
      "message": "Is is worth having these getter functions?  Possibly more readable to do these things inline?",
      "revId": "c2e8710a3e06bd422adfc96740c4d60e3af9931a",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}