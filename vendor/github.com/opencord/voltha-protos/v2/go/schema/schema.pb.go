// Code generated by protoc-gen-go. DO NOT EDIT.
// source: voltha_protos/schema.proto

package schema

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Contains the name and content of a *.proto file
type ProtoFile struct {
	FileName             string   `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Proto                string   `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	Descriptor_          []byte   `protobuf:"bytes,3,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoFile) Reset()         { *m = ProtoFile{} }
func (m *ProtoFile) String() string { return proto.CompactTextString(m) }
func (*ProtoFile) ProtoMessage()    {}
func (*ProtoFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d785a7d5fd3f7a9, []int{0}
}

func (m *ProtoFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoFile.Unmarshal(m, b)
}
func (m *ProtoFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoFile.Marshal(b, m, deterministic)
}
func (m *ProtoFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoFile.Merge(m, src)
}
func (m *ProtoFile) XXX_Size() int {
	return xxx_messageInfo_ProtoFile.Size(m)
}
func (m *ProtoFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoFile.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoFile proto.InternalMessageInfo

func (m *ProtoFile) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *ProtoFile) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *ProtoFile) GetDescriptor_() []byte {
	if m != nil {
		return m.Descriptor_
	}
	return nil
}

// Proto files and compiled descriptors for this interface
type Schemas struct {
	// Proto files
	Protos []*ProtoFile `protobuf:"bytes,1,rep,name=protos,proto3" json:"protos,omitempty"`
	// Proto file name from which swagger.json shall be generated
	SwaggerFrom string `protobuf:"bytes,2,opt,name=swagger_from,json=swaggerFrom,proto3" json:"swagger_from,omitempty"`
	// Proto file name from which yang schemas shall be generated
	YangFrom             string   `protobuf:"bytes,3,opt,name=yang_from,json=yangFrom,proto3" json:"yang_from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schemas) Reset()         { *m = Schemas{} }
func (m *Schemas) String() string { return proto.CompactTextString(m) }
func (*Schemas) ProtoMessage()    {}
func (*Schemas) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d785a7d5fd3f7a9, []int{1}
}

func (m *Schemas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schemas.Unmarshal(m, b)
}
func (m *Schemas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schemas.Marshal(b, m, deterministic)
}
func (m *Schemas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schemas.Merge(m, src)
}
func (m *Schemas) XXX_Size() int {
	return xxx_messageInfo_Schemas.Size(m)
}
func (m *Schemas) XXX_DiscardUnknown() {
	xxx_messageInfo_Schemas.DiscardUnknown(m)
}

var xxx_messageInfo_Schemas proto.InternalMessageInfo

func (m *Schemas) GetProtos() []*ProtoFile {
	if m != nil {
		return m.Protos
	}
	return nil
}

func (m *Schemas) GetSwaggerFrom() string {
	if m != nil {
		return m.SwaggerFrom
	}
	return ""
}

func (m *Schemas) GetYangFrom() string {
	if m != nil {
		return m.YangFrom
	}
	return ""
}

func init() {
	proto.RegisterType((*ProtoFile)(nil), "schema.ProtoFile")
	proto.RegisterType((*Schemas)(nil), "schema.Schemas")
}

func init() { proto.RegisterFile("voltha_protos/schema.proto", fileDescriptor_9d785a7d5fd3f7a9) }

var fileDescriptor_9d785a7d5fd3f7a9 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x51, 0xc1, 0x4a, 0x03, 0x31,
	0x14, 0x64, 0x5b, 0x6c, 0xdd, 0xb4, 0x52, 0x0c, 0x22, 0xcb, 0x56, 0xa4, 0xf6, 0x54, 0x0f, 0x26,
	0x52, 0xff, 0x40, 0x68, 0xbd, 0x89, 0xb4, 0xe0, 0xc1, 0x83, 0x25, 0xdd, 0xbe, 0xa6, 0x81, 0xcd,
	0xbe, 0x25, 0x9b, 0xae, 0xf4, 0xea, 0x2f, 0xf8, 0x69, 0xfe, 0x82, 0x1f, 0x22, 0xd9, 0xa4, 0xe2,
	0x2d, 0x33, 0x93, 0xc7, 0x9b, 0x99, 0x47, 0xd2, 0x1a, 0x73, 0xbb, 0x13, 0xab, 0xd2, 0xa0, 0xc5,
	0x8a, 0x57, 0xd9, 0x0e, 0xb4, 0x60, 0x0d, 0xa2, 0x1d, 0x8f, 0xd2, 0x2b, 0x89, 0x28, 0x73, 0xe0,
	0xa2, 0x54, 0x5c, 0x14, 0x05, 0x5a, 0x61, 0x15, 0x16, 0x95, 0xff, 0x95, 0x0e, 0x83, 0xda, 0xa0,
	0xf5, 0x7e, 0xcb, 0x41, 0x97, 0xf6, 0xe0, 0xc5, 0xf1, 0x3b, 0x89, 0x5f, 0xdc, 0x63, 0xae, 0x72,
	0xa0, 0x43, 0x12, 0x6f, 0x55, 0x0e, 0xab, 0x42, 0x68, 0x48, 0xa2, 0x51, 0x34, 0x89, 0x17, 0xa7,
	0x8e, 0x78, 0x16, 0x1a, 0xe8, 0x05, 0x39, 0x69, 0x46, 0x92, 0x56, 0x23, 0x78, 0x40, 0xaf, 0x09,
	0xd9, 0x40, 0x95, 0x19, 0x55, 0x5a, 0x34, 0x49, 0x7b, 0x14, 0x4d, 0xfa, 0x8b, 0x7f, 0xcc, 0xd8,
	0x92, 0xee, 0xb2, 0x31, 0x59, 0xd1, 0x5b, 0xd2, 0xf1, 0x21, 0x92, 0x68, 0xd4, 0x9e, 0xf4, 0xa6,
	0xe7, 0x2c, 0x84, 0xf9, 0x33, 0xb0, 0x08, 0x1f, 0xe8, 0x0d, 0xe9, 0x57, 0x1f, 0x42, 0x4a, 0x30,
	0xab, 0xad, 0x41, 0x1d, 0x56, 0xf6, 0x02, 0x37, 0x37, 0xa8, 0x9d, 0xd7, 0x83, 0x28, 0xa4, 0xd7,
	0xdb, 0xde, 0xab, 0x23, 0x9c, 0x38, 0x7d, 0x25, 0x67, 0x7e, 0xeb, 0x12, 0x4c, 0xad, 0x32, 0xa0,
	0x33, 0x12, 0x3f, 0x81, 0xf5, 0x1c, 0xbd, 0x64, 0xbe, 0x11, 0x76, 0x6c, 0x84, 0xcd, 0x5c, 0x23,
	0xe9, 0xe0, 0x68, 0x28, 0x38, 0x1e, 0x0f, 0x3e, 0xbf, 0x7f, 0xbe, 0x5a, 0x31, 0xed, 0x86, 0xda,
	0x1f, 0xef, 0xdf, 0x98, 0x54, 0x76, 0xb7, 0x5f, 0xb3, 0x0c, 0x35, 0xc7, 0x12, 0x8a, 0x0c, 0xcd,
	0x86, 0xfb, 0x13, 0xdd, 0x85, 0x13, 0xd5, 0x53, 0x2e, 0x31, 0x4c, 0xac, 0x7d, 0xa2, 0x87, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x79, 0xcf, 0xdb, 0x33, 0xc7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SchemaServiceClient is the client API for SchemaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchemaServiceClient interface {
	// Return active grpc schemas
	GetSchema(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Schemas, error)
}

type schemaServiceClient struct {
	cc *grpc.ClientConn
}

func NewSchemaServiceClient(cc *grpc.ClientConn) SchemaServiceClient {
	return &schemaServiceClient{cc}
}

func (c *schemaServiceClient) GetSchema(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Schemas, error) {
	out := new(Schemas)
	err := c.cc.Invoke(ctx, "/schema.SchemaService/GetSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchemaServiceServer is the server API for SchemaService service.
type SchemaServiceServer interface {
	// Return active grpc schemas
	GetSchema(context.Context, *empty.Empty) (*Schemas, error)
}

func RegisterSchemaServiceServer(s *grpc.Server, srv SchemaServiceServer) {
	s.RegisterService(&_SchemaService_serviceDesc, srv)
}

func _SchemaService_GetSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchemaServiceServer).GetSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.SchemaService/GetSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchemaServiceServer).GetSchema(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SchemaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schema.SchemaService",
	HandlerType: (*SchemaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSchema",
			Handler:    _SchemaService_GetSchema_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "voltha_protos/schema.proto",
}
