{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "83f58f57_5de236b4",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-25T13:32:05Z",
      "side": 1,
      "message": "Currently in the Core state machine we do not have a specific transition when a device goes to operation failed state.   Is there any action that is needed when such a transition occurs? E.g. should the logical ports be removed?  If this is an OLT device, should the logical agent be removed (assuming we went from ACTIVE operational state to FAILED state - not sure if that\u0027s a valid transition).\n\nIf we do re-enable on a failed operational state, the Core will first change the operational state to activating before sending the request to the adapter.  Is this still ok in this use case?",
      "revId": "874f08328d2865fb561ffe6c044f6ecbd11da282",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85bae0df_0a3c6db4",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2021-10-25T13:34:28Z",
      "side": 1,
      "message": "I believe we should leave as is. going to activating is ok for me. \n@Mahir, should we consider cleanup of elements for the device that failed ?",
      "parentUuid": "83f58f57_5de236b4",
      "revId": "874f08328d2865fb561ffe6c044f6ecbd11da282",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4283bb1c_1c32824a",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2021-10-25T16:54:00Z",
      "side": 1,
      "message": "I\u0027m not sure about taking any action when transition to FAILED operational status. The transition would be done not from ACTIVE, but from ACTIVATING to FAIL.  And previously the device was admin DISABLED. During a enableDevice the state transition was;\n (admin\u003dDISABLED,  oper\u003dUNKNOWN) -\u003e (admin\u003dENABLE,  oper\u003dACTIVATING)-\u003e(admin\u003dENABLE, oper\u003dACTIVE). \nBut now with this patch, if enableDevice fails, the transition would be;\n (admin\u003dDISABLED, oper\u003dUNKNOWN) -\u003e (admin\u003dENABLE,oper\u003dACTIVATING)-\u003e(admin\u003dENABLE, oper\u003dFAILED). \nThen if an enable is called again and succeeded this time, it would be;\n (admin\u003dENABLE, oper\u003dFAILED) -\u003e (admin\u003dENABLE, oper\u003dACTIVATING)-\u003e(admin\u003dENABLE, oper\u003dACTIVE).\nIf enable is failed again then it would again be;\n(admin\u003dENABLE, oper\u003dFAILED) -\u003e (admin\u003dENABLE, oper\u003dACTIVATING)-\u003e(admin\u003dENABLE, oper\u003dFAILED). \n\nBesides the questions you asked, I have some other questions in my mind. What if some of the ports of the device are enabled and some not(enabling a device means enabling its ports in adapters)? Does this still mean failure or not(currently one port failure is enough to decide enableDevice is failed)?\n\nAre there some functionalities that needs to be checked and tested when the device waiting in operational FAILED state?",
      "parentUuid": "85bae0df_0a3c6db4",
      "revId": "874f08328d2865fb561ffe6c044f6ecbd11da282",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edf61a2a_113d1628",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2021-10-25T23:25:43Z",
      "side": 1,
      "message": "I tested and checked that the logical device or its ports are not removed when the device is disabled. So I think no need to remove them when failed in enabling the previously disabled device.",
      "parentUuid": "4283bb1c_1c32824a",
      "revId": "874f08328d2865fb561ffe6c044f6ecbd11da282",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90105b1e_7c67db15",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-10-28T12:10:08Z",
      "side": 1,
      "message": "When a device transitions to a \"FAILED\" state doesn\u0027t this mean effectively that the device is in an unknown state, which translates the system doesn\u0027t really know how to get the device back to a known good state except via a reset?",
      "parentUuid": "edf61a2a_113d1628",
      "revId": "874f08328d2865fb561ffe6c044f6ecbd11da282",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d5f4a28_7bfcf7a9",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-28T13:17:27Z",
      "side": 1,
      "message": "@Mahir Does the operational FAILED state applies only when a device is being activated?  Can we get in this operational state if we disable a device (or re-enable a disabled device)?  Should a FAILED operational state have any impact on the logical device port state?  \n\nBtw, the change you made is good.   My comments are whether something else need to happen in the Core when we see a device in FAILED operational state.",
      "parentUuid": "90105b1e_7c67db15",
      "revId": "874f08328d2865fb561ffe6c044f6ecbd11da282",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76916bad_c2816a01",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2021-10-28T18:31:02Z",
      "side": 1,
      "message": "@David currently FAILED state applies only when a disabled device is being reenabled. There is no sate transition to FAILED in anywhere else. I agree that the \u0027FAILED\u0027 sounds like a more generic  state than a \u0027REENABLE_FAILED\u0027 like thing, but we decided to use an existing state for this. In order to get a device to a known good state in this case is to try a new reenable for ex. This is why this change originally came up. We had a requirement to be able to reenable the device again when the previous reenable is failed. An other action may be reseting as you said.\n\n@Khen We go to FAILED state only in a re-enable case(enabling a previously disabled device). When adapters receive a reenable from core, whether they transit to oper\u003dACTIVE or FAILED according to the successful execution of reenable. For the logical device changes and questions about other possible needed changes in core, I totally see the point and I also have the same questions in my mind as yours. The thing is, before device go to the FAILED state, it is a disabled device. In this DISABLED state, the logical device is there with its ports. So I\u0027m not sure if we need to remove the logical device or its ports in FAILED state, though we have them for a disabled device.\n\nOn top of these questions, imho we need to take this in a step further and think what should be done if a reenabled device is partially enabled. Re-enabling a device corresponds to unlocking the ports of the device in adapters. What if we successfully unlocked some UNI ports of the ONU but failed some? How this reflects to the states of device and the ports? Currently we are giving up on the other ports and send a oper-state\u003dFAILED immediately back to core when a port is failed. We may end up for example 2 ports enabled, 1 failed and 1 left locked. What does oper-state FAILED means in this case. We have the capability to use some ports of device and probably the subscriber started to take its service on the unlocked ports. The changes in the code are the things we discussed and decided to make in TST. Seems we need more to think on or discuss for this case. We may leave the patch unmerged and continue to discuss it on mail or at the next TST if you prefer. Or we can merge this and discuss what to be done further on that. Thougts?",
      "parentUuid": "3d5f4a28_7bfcf7a9",
      "revId": "874f08328d2865fb561ffe6c044f6ecbd11da282",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    }
  ]
}