{
  "comments": [
    {
      "key": {
        "uuid": "ad9d865a_68d67bed",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "Are we sure that no caller alters the returned device?  What are the guidelines that should be followed for safe access to this device struct?",
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3370207f_ab85cc65",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "getDeviceWithoutLock, implies only 1 caller that already holds the lock of the device can change it.   There is a separate getDevice() where clone is used.",
      "parentUuid": "ad9d865a_68d67bed",
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1a1f7ca_36a1fbfd",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 1
      },
      "lineNbr": 894,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "isn\u0027t the removal of the updatedCtx actually lowering the time allowed for this call?",
      "range": {
        "startLine": 894,
        "startChar": 45,
        "endLine": 894,
        "endChar": 48
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3448145a_515360b0",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 1
      },
      "lineNbr": 894,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-28T13:49:55Z",
      "side": 1,
      "message": "This is a dB write which is part of a complete request. Hence we need to use the context timeout.  The updateCtx is a left-over when we had two core pairs where we needed the update time stamp to differentiate between two simultaneous writes on the same object.",
      "parentUuid": "e1a1f7ca_36a1fbfd",
      "range": {
        "startLine": 894,
        "startChar": 45,
        "endLine": 894,
        "endChar": 48
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b712ee35_ce1bb29e",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 1
      },
      "lineNbr": 1557,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "Error is returned, and will likely be logged by the caller.  Is it necessary to log this at error level?",
      "range": {
        "startLine": 1557,
        "startChar": 6,
        "endLine": 1557,
        "endChar": 12
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fed3fc0_6810c00e",
        "filename": "rw_core/core/device/agent.go",
        "patchSetId": 1
      },
      "lineNbr": 1557,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "Will change to warn",
      "parentUuid": "b712ee35_ce1bb29e",
      "range": {
        "startLine": 1557,
        "startChar": 6,
        "endLine": 1557,
        "endChar": 12
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c9f46dc_4fc67490",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "If context is no longer used, no need to pass it.\n(more like this)",
      "range": {
        "startLine": 254,
        "startChar": 54,
        "endLine": 254,
        "endChar": 71
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8870252_2c41e6a5",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "Sure, will update",
      "parentUuid": "9c9f46dc_4fc67490",
      "range": {
        "startLine": 254,
        "startChar": 54,
        "endLine": 254,
        "endChar": 71
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83dc821d_53dfb177",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "instead of overriding the cox here, shouldn\u0027t be the call that passes down the right one ? same is valid for all other instances of this piece of code",
      "range": {
        "startLine": 262,
        "startChar": 3,
        "endLine": 262,
        "endChar": 84
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53c7b5c8_89439239",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-28T13:49:55Z",
      "side": 1,
      "message": "There are two parts for this request.  Part 1 processes the request from ONOS, update the dB and sends back a response (partial complete) such that we don\u0027t hold the client until the transaction is completed fully which can take time.    For that part ctx is used (used prior to this method).  Part 2 is when we send the request to the olt/onu device and adapters and wait for a response.   That transaction can take time, hence deserves its own context. On failure the flows are reverted back.   As we mentioned on slack we will eventually need to separate the core timeout (used here) and a timeout specific for communication with adapters.  That\u0027s another Jira.",
      "parentUuid": "83dc821d_53dfb177",
      "range": {
        "startLine": 262,
        "startChar": 3,
        "endLine": 262,
        "endChar": 84
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bf849df_17da8b71",
        "filename": "rw_core/core/device/logical_agent_flow.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "I\u0027m not sure this import is needed",
      "range": {
        "startLine": 32,
        "startChar": 1,
        "endLine": 32,
        "endChar": 10
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c64d41c5_c1ff4b75",
        "filename": "rw_core/core/device/logical_agent_flow.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-28T13:49:55Z",
      "side": 1,
      "message": "It\u0027s just moved places with git fmt.",
      "parentUuid": "9bf849df_17da8b71",
      "range": {
        "startLine": 32,
        "startChar": 1,
        "endLine": 32,
        "endChar": 10
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92cbfd21_cc2915be",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "debug",
      "range": {
        "startLine": 68,
        "startChar": 11,
        "endLine": 68,
        "endChar": 16
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59671527_18ff488f",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 77,
        "startChar": 11,
        "endLine": 77,
        "endChar": 16
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "737ed07a_2f9cdd41",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 1
      },
      "lineNbr": 475,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "pass the device ID as argument before the err, that clarifies immediately what device we are talking about.",
      "range": {
        "startLine": 475,
        "startChar": 2,
        "endLine": 475,
        "endChar": 74
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ad4fc85_b65b3dd7",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 1
      },
      "lineNbr": 475,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-28T13:49:55Z",
      "side": 1,
      "message": "Will update.",
      "parentUuid": "737ed07a_2f9cdd41",
      "range": {
        "startLine": 475,
        "startChar": 2,
        "endLine": 475,
        "endChar": 74
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77d59a4b_24047c79",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 1
      },
      "lineNbr": 497,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-05-27T20:30:32Z",
      "side": 1,
      "message": "addLogicalDevicePortsWithoutLock",
      "range": {
        "startLine": 497,
        "startChar": 2,
        "endLine": 497,
        "endChar": 37
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c85454f4_6322b964",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 1
      },
      "lineNbr": 497,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "Will update.",
      "parentUuid": "77d59a4b_24047c79",
      "range": {
        "startLine": 497,
        "startChar": 2,
        "endLine": 497,
        "endChar": 37
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbe84a03_6acc4fbe",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "can we distinguish the cases ? a Warn seems a pretty strong thing for a non error",
      "range": {
        "startLine": 509,
        "startChar": 0,
        "endLine": 511,
        "endChar": 15
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51163d2b_9ed75dce",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-28T13:49:55Z",
      "side": 1,
      "message": "I will see what I can do here.",
      "parentUuid": "cbe84a03_6acc4fbe",
      "range": {
        "startLine": 509,
        "startChar": 0,
        "endLine": 511,
        "endChar": 15
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fdf7e8c_bcf78c5a",
        "filename": "rw_core/core/device/logical_agent_route.go",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "deviceRoutes seem to be set, but never changed, can we just set it once when the agent is created, and do away with this locking?",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 20
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37483ebf_7041ed84",
        "filename": "rw_core/core/device/logical_agent_route.go",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "In the case where the entire set of routes is computed if there is a failure then the deviceRoutes is reset.   Subsequent calls to route creation, in this scenario, will generate some route.",
      "parentUuid": "5fdf7e8c_bcf78c5a",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 20
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6442cabe_32daade4",
        "filename": "rw_core/core/device/logical_agent_route.go",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-28T17:06:56Z",
      "side": 1,
      "message": "Would it be possible/sensible to reset deviceRoutes internally, instead of recreating \u0026 requiring this locking?  \n\nMay be a separate jira.",
      "parentUuid": "37483ebf_7041ed84",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 20
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246a83d8_af742c54",
        "filename": "rw_core/mocks/adapter.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "I\u0027m wondering how do we get to this situation. Have you seen it in the logs/runs ?",
      "range": {
        "startLine": 153,
        "startChar": 23,
        "endLine": 153,
        "endChar": 53
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23d9dc97_b2c73701",
        "filename": "rw_core/mocks/adapter.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-28T13:49:55Z",
      "side": 1,
      "message": "it\u0027s a mock used in the unit tests and I saw error messages in unit test that did not make sense and this was the issue.",
      "parentUuid": "246a83d8_af742c54",
      "range": {
        "startLine": 153,
        "startChar": 23,
        "endLine": 153,
        "endChar": 53
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f21420d2_25fda3af",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "Need a discussion on port identifiers.\n\nShould this be a `struct{DeviceID string; PortNo uint32}`?",
      "range": {
        "startLine": 57,
        "startChar": 31,
        "endLine": 57,
        "endChar": 37
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17a885fe_d287860d",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "No.  A logical port no ought to be unique for a logical device.   The issue I mentioned on slack will have to be addressed in a separate Jira.",
      "parentUuid": "f21420d2_25fda3af",
      "range": {
        "startLine": 57,
        "startChar": 31,
        "endLine": 57,
        "endChar": 37
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6422c30b_a17f6863",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "It seems that a number of values here are cached even though looking them up on-demand would be an in-memory operation.  \n\nAs the Device/LogicalDevice moves towards maps instead of lists, could this caching be removed?",
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7240820a_969c541d",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "I doubt we will remove this caching.  Doing so will require a device/port lookup which invoke a lock.  Even if it\u0027s small with maps, when doing so while other operations are going on would make the latency even bigger.",
      "parentUuid": "6422c30b_a17f6863",
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54901fdc_91f346f3",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "I cannot seem to figure out what this is mapping from/to.\n\nConsider using a more descriptive, less cryptic name.",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 63,
        "endChar": 26
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1425da36_2f5533a4",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "This is the pon port number on the parent device that is associated with the child.   Help with a better name would be great.",
      "parentUuid": "54901fdc_91f346f3",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 63,
        "endChar": 26
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88954c35_8e6f4a0d",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-28T17:06:56Z",
      "side": 1,
      "message": "Consider `childConnectionPort`?",
      "parentUuid": "1425da36_2f5533a4",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 63,
        "endChar": 26
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b80859f_d003dfaa",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 64
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21c0eedd_4726b7e7",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-28T13:49:55Z",
      "side": 1,
      "message": "Will do",
      "parentUuid": "2b80859f_d003dfaa",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 64
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d201869_cf69eb89",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "Should add a comment to describe what this function does.",
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbd8d035_2161b0f5",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "Will do",
      "parentUuid": "1d201869_cf69eb89",
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63b1eab4_3a267fcc",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 427,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "...returns the \u003csomething\u003e from the model...?",
      "range": {
        "startLine": 427,
        "startChar": 29,
        "endLine": 427,
        "endChar": 30
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ac7a950_02406bd7",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 427,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "hopefully :) will fix",
      "parentUuid": "63b1eab4_3a267fcc",
      "range": {
        "startLine": 427,
        "startChar": 29,
        "endLine": 427,
        "endChar": 30
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e5e1972_e5e88394",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-28T17:06:56Z",
      "side": 1,
      "message": "Now that the use of \"childPonPortNoMapOnParent\" makes more sense to me:\n\nCan the \"from cache\" vs \"from model\" decision logic be handled by a single helper function?  Or if this is simply the \"one right way\" to look up this data, perhaps remove \"FromCache\" from the function name?\n\n(There\u0027s just a number of small functions here with somewhat confusing names/behaviour.  Doesn\u0027t need to change if you don\u0027t agree with my assessment. ;)",
      "range": {
        "startLine": 466,
        "startChar": 24,
        "endLine": 466,
        "endChar": 49
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b70ce70f_262c0c3f",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 471,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-05-27T20:48:31Z",
      "side": 1,
      "message": "This is a tiny function, would it be cleaner to read dr.childPonPortNoMapOnParent directly?",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 471,
        "endChar": 1
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "051e4c1e_b86874c8",
        "filename": "rw_core/route/device_route.go",
        "patchSetId": 1
      },
      "lineNbr": 471,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T21:30:13Z",
      "side": 1,
      "message": "Was trying to avoid repeating the same code twice in the function above.",
      "parentUuid": "b70ce70f_262c0c3f",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 471,
        "endChar": 1
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08498ca4_6717230c",
        "filename": "rw_core/route/device_route_test.go",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-05-28T07:40:21Z",
      "side": 1,
      "message": "t.log ?",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 16
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee8bbb05_acb582bc",
        "filename": "rw_core/route/device_route_test.go",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-28T13:49:55Z",
      "side": 1,
      "message": "sure",
      "parentUuid": "08498ca4_6717230c",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 16
      },
      "revId": "89d00d7b6cb597053ee9de9dd7eeaa32e0a265b9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}