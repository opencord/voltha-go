{
  "comments": [
    {
      "key": {
        "uuid": "9f2c1641_e5e87126",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T16:04:57Z",
      "side": 1,
      "message": "Since the requestQueue is static, we may get a request for logical device and try to run it before the logical device is fully started.   Should the start method grab the \"lock\" of the request queue during the start phase?",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c39a98bd_d5544249",
        "filename": "rw_core/core/device/logical_agent.go",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-05T17:53:38Z",
      "side": 1,
      "message": "Maybe.  If this is the case, the lock should really be acquired in the newLogicalAgent() function, and released here.\n\n(i.e. - don\u0027t allow calls which could arrive before the start method.)\n\nProbably in a separate patch.",
      "parentUuid": "9f2c1641_e5e87126",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e878cfee_4fb8469b",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 6
      },
      "lineNbr": 182,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "Will this include the OfpPortStats attribute?",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dc7b8ae_20524138",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 6
      },
      "lineNbr": 182,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "Yes.  Using \nnewPort \u003d *oldPort\nwill clone the struct including all fields, but doesn\u0027t do a deep clone, so the existing pointer to OfpPortStats will remain as-is.",
      "parentUuid": "e878cfee_4fb8469b",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a0f9e79_28a3e5f6",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-06-08T19:28:06Z",
      "side": 1,
      "message": "shouldn\u0027t we call\n \"agent.deleteLogicalPortsFromMap()\" \n\nhere as in agent.deleteLogicalPort?",
      "range": {
        "startLine": 230,
        "startChar": 3,
        "endLine": 230,
        "endChar": 4
      },
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2688d970_fa62b518",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T20:56:07Z",
      "side": 1,
      "message": "Good catch.",
      "parentUuid": "3a0f9e79_28a3e5f6",
      "range": {
        "startLine": 230,
        "startChar": 3,
        "endLine": 230,
        "endChar": 4
      },
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecd0afab_13691017",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-06-08T19:28:06Z",
      "side": 1,
      "message": "Until this is done we may have a race between PortCapability response and the portStateUpdate from onu-adapter. To eliminate this, the portHandle lock might be hold before the getPortCapability call.",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 424,
        "endChar": 113
      },
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04322f67_0a686aa7",
        "filename": "rw_core/core/device/logical_agent_port.go",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T20:56:07Z",
      "side": 1,
      "message": "If this is being called, then the lock on the port was not able to be acquired on line 417, so the port does not exist.  (Only ports which exist can be locked.)  \n\nIf another request comes in (portStateUpdate in your example) that request will not find the port (will return \"port-%d-not-exist\") until after this getPortCapability returns \u0026 the port has been created.\n\nThus, this \"race condition\" will at worst trigger a retry, correctness is guaranteed.",
      "parentUuid": "ecd0afab_13691017",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 424,
        "endChar": 113
      },
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "541e7aed_e27f6501",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 6
      },
      "lineNbr": 265,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "If a device is not in memory (e.g. on a restart) then there should be a mechanism to load that device opportunistically.",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7440587_eeab6c30",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 6
      },
      "lineNbr": 265,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "Not entirely sure what you mean by this.\n\nI agree that things should be loaded as-needed, on-demand.\n\nThis particular change would just remove the need to access the parent device to complete this request.",
      "parentUuid": "541e7aed_e27f6501",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ded467e3_26cfb0f4",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 6
      },
      "lineNbr": 295,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-06-08T19:28:06Z",
      "side": 1,
      "message": "I don\u0027t understand the aim of this function(getLogicalPortID with Device parameter). A device may have more than one port. This returns the first found one only.",
      "range": {
        "startLine": 295,
        "startChar": 0,
        "endLine": 295,
        "endChar": 54
      },
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e02c4f2a_6f2b9657",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 6
      },
      "lineNbr": 295,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T20:56:07Z",
      "side": 1,
      "message": "I believe that this is only called on an OLT device, and that port.DeviceId refers to the ONU device that is connected to a given port on that OLT.",
      "parentUuid": "ded467e3_26cfb0f4",
      "range": {
        "startLine": 295,
        "startChar": 0,
        "endLine": 295,
        "endChar": 54
      },
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26db9d25_6f37914b",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 6
      },
      "lineNbr": 357,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-06-08T19:28:06Z",
      "side": 1,
      "message": "If this is the portNo we are using as the key in map then we can just get the port in map with key and return it.",
      "range": {
        "startLine": 357,
        "startChar": 43,
        "endLine": 357,
        "endChar": 53
      },
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c162f97_5f3e1fcb",
        "filename": "rw_core/core/device/logical_manager.go",
        "patchSetId": 6
      },
      "lineNbr": 357,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T20:56:07Z",
      "side": 1,
      "message": "LogicalPorts are unique per-OLT, thus per-logicalAgent.  \n`.Id` here refers to the OLT that this port belongs to.",
      "parentUuid": "26db9d25_6f37914b",
      "range": {
        "startLine": 357,
        "startChar": 43,
        "endLine": 357,
        "endChar": 53
      },
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06ddcdeb_32684c6d",
        "filename": "rw_core/core/device/logical_port/common.go",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "Should the package name be logical-port instead?  Otherwise, the same name will likely be used for device ports.",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59453206_2091c6ba",
        "filename": "rw_core/core/device/logical_port/common.go",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "Originally used logical_port as the name, but the linter complained.\n\nI think this is fine, since the device loader \u0026 logical device loader will be used in separate places (Agent \u0026 LogicalAgent, respectively).",
      "parentUuid": "06ddcdeb_32684c6d",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1ac1792_405ef338",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T16:04:57Z",
      "side": 1,
      "message": "The name \"ports\" and \"devicePorts\" can be confusing.  Either put additional comments or use names that clearly differentiate between them.",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b31be2bc_da7a67cf",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-05T17:53:38Z",
      "side": 1,
      "message": "ports contains all ports.\n\ndevicePorts contains all the ports, sorted per-device, for fast lookup of all a device\u0027s ports.\n\nOpen to suggestions for names, but I personally find \"devicePorts\" fairly descriptive.  (perhaps \"devicesPorts\"?  Seems like there\u0027s multiple ways to read this though: devices vs device\u0027s vs devices\u0027.)",
      "parentUuid": "a1ac1792_405ef338",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76e367ba_c083fdb9",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "How about \"ports\" and \"portsLookup\"?",
      "parentUuid": "b31be2bc_da7a67cf",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cb37a8c_b5efed85",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "\"ports\" is the name of the package already, so portsLookup is redundant here.  \n\nHow about \"deviceLookup\"?  (Though this is a map, so it\u0027s already implied that this is a lookup structure...)",
      "parentUuid": "76e367ba_c083fdb9",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4d4cec5_ccc76a9f",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T16:04:57Z",
      "side": 1,
      "message": "Since chunk is the data type, it is easier to read the code if \"aChunk\" is used instead of \"entry\".",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a58caf5a_54427390",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-05T17:53:38Z",
      "side": 1,
      "message": "I uh... disagree?\n\n\"aChunk\" says nothing wrt the usage of the chunk.  It\u0027s similar to the `interface{}` problem, though I suppose it hints at the type.\n\n\"entry\" isn\u0027t much better, but implies that this is a map entry, which is more descriptive later when we aren\u0027t directly dealing with the map anymore.",
      "parentUuid": "c4d4cec5_ccc76a9f",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fea55c41_b970986b",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "It\u0027s not clear that the name \"entry\" expresses anything about its usage.\n\nI guess it\u0027s a matter of preference.",
      "parentUuid": "a58caf5a_54427390",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b67975f7_12007c1f",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "I consider it like using `i` in a loop.\n\nFor small loops it\u0027s specific enough, and more detail is just extra words to read.\n\nThis is a fairly small function, so \"entry\" seems specific enough.",
      "parentUuid": "fea55c41_b970986b",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "337d3bd2_6398dac9",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T16:04:57Z",
      "side": 1,
      "message": "Is this meant to be a recursive call until the port is deleted in ports[]?  If that\u0027s the case and for whatever reason that port never gets deleted then this function will go in an infinite loop.  Is there a chance of that happening?",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e986214_d3270444",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-05T17:53:38Z",
      "side": 1,
      "message": "It\u0027s possible (though rare) for the port to be deleted between the loader.lock.Unlock() on line 121, and the entry.lock.Lock() on line 127.  \nIn such a case, the entry we have is no longer valid, so must either retry (as is done currently) or give up (which may also be valid, though I believe there was a reason that this wasn\u0027t valid...)",
      "parentUuid": "337d3bd2_6398dac9",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "703f622c_36108385",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-06-08T19:28:06Z",
      "side": 1,
      "message": "I\u0027m also not comfortable with this recursive call. Better to assume that entry does not exist here? Or retry(recurse) for a while and then give up.",
      "parentUuid": "6e986214_d3270444",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1797dc0_f329268f",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T20:56:07Z",
      "side": 1,
      "message": "It\u0027s extremely unlikely that this will retry multiple times.\n\nThere would have to be very precise timing \u0026 another thread repeating port deletion-\u003ecreation-\u003edeletion-\u003e...",
      "parentUuid": "703f622c_36108385",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6a4cbfa_be87dcda",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 169,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T16:04:57Z",
      "side": 1,
      "message": "The general pattern is for a calling function to get a handler , do something with it and then release the lock.   Here calling \"Delete\" on the handler is releasing the lock as well.  Should keep following the same pattern.",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb28a316_b518e678",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 169,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-05T17:57:05Z",
      "side": 1,
      "message": "It is \"safe\" to call Unlock() multiple times (though the caller should not do so intentionally).\n\nThe purpose here is to invalidate the handle, so that any GetReadOnly() or Update() calls made after a Delete() will fail.\n\nOnce deleted, the port should no longer be accessible.",
      "parentUuid": "f6a4cbfa_be87dcda",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acb9bf1f_412bec4c",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 169,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "Another reason to have more description on the handler usage.",
      "parentUuid": "fb28a316_b518e678",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68af7e51_2feafe09",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 169,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "This is a special case that the caller shouldn\u0027t really need to worry about.  \n\nIt\u0027s really just an extra sanity check to ensure the port isn\u0027t updated or querried after a Delete().",
      "parentUuid": "acb9bf1f_412bec4c",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b38ffc50_ab28c8c2",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 190,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T16:04:57Z",
      "side": 1,
      "message": "Empty?",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a218d8c_2249b08f",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 190,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-05T17:53:38Z",
      "side": 1,
      "message": "Yes, we\u0027re returning the \"set\" of port IDs, so there\u0027s no value associated.\n\nmap[\u003ctype\u003e]struct{}\nis like\nmap[\u003ctype\u003e]bool\nbut slightly more memory efficient.",
      "parentUuid": "b38ffc50_ab28c8c2",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "669b589c_c652aa5b",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 190,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "Should that method then be renamed to ListIDs?",
      "parentUuid": "1a218d8c_2249b08f",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f13974c9_4d66f50b",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 190,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "Possibly.  There is no \"list structs\" call (and I don\u0027t think there really should be), so it\u0027s not strictly nescessary to specify.\n\nI think having List() return the ids rather than the type is pretty clear as-is, the caller will have to think about locking \u0026 such already, so this shouldn\u0027t add much cognitive load.",
      "parentUuid": "669b589c_c652aa5b",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c62d3498_a7e50400",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 203,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T16:04:57Z",
      "side": 1,
      "message": "Empty?",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "955f2a32_ab579d83",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 203,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-05T17:53:38Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "c62d3498_a7e50400",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d19f383_95fb66fc",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 203,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "Consider renaming the method to be more explicit, ListIdsForDevice",
      "parentUuid": "955f2a32_ab579d83",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5a1f9ef_99cc4d9c",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 203,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "3d19f383_95fb66fc",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d9d131f_f95c692c",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 208,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T16:04:57Z",
      "side": 1,
      "message": "Looks like still WIP.   What\u0027s the purpose of lookup?",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "359971fe_c4e8bd48",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 208,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-05T17:53:38Z",
      "side": 1,
      "message": "Currently, this maintains a fast-lookup structure of the type\n\nmap[deviceID]map[portID]struct{}\n\nWhich is used to efficiently list all ports for a given device.\n\nAm hoping to add more structures like this for each lookup case, rather than iterating through the whole list each time.",
      "parentUuid": "7d9d131f_f95c692c",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17eaf144_7b7533e9",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 208,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-05T18:55:08Z",
      "side": 1,
      "message": "Having structures like that is useful.  The only downside is that it\u0027s one more thing to maintain across CRUD requests.",
      "parentUuid": "359971fe_c4e8bd48",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fb31fc3_24a69687",
        "filename": "rw_core/core/device/logical_port/loader.go",
        "patchSetId": 6
      },
      "lineNbr": 208,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-06-08T17:54:43Z",
      "side": 1,
      "message": "Map entries/lookups take at most O(log(n)) time, and having any given number of them means the overall call will run in O(log(n)) time as well.\n\nThis can be used to avoid the O(n) penalty for each place we currently iterate, so I believe it\u0027s worthwhile most of the time.",
      "parentUuid": "17eaf144_7b7533e9",
      "revId": "484f8aa01347ae4472a26cad7e3eae9ce17e53ea",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}