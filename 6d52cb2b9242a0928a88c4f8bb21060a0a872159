{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "37c5f0dd_daac6516",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-11T13:07:21Z",
      "side": 1,
      "message": "I\u0027d tend more to give a +1 ...",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26908ede_74a9659e",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1664,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-11T13:07:21Z",
      "side": 1,
      "message": "... some approach I would at least not expect. This way a download request for multiple devices will be split here into separate calls to downloadImageToDevice for each device, even though the API has the facility to send the complete device map with one download command. Seems not very effective in case multiple devices shall be updated.",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d297156_67d47eae",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1664,
      "author": {
        "id": 1000608
      },
      "writtenOn": "2021-10-11T15:08:25Z",
      "side": 1,
      "message": "Thanks for bringing this up. This would simplify the implementation it seems.",
      "parentUuid": "26908ede_74a9659e",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbb92941_11530592",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1664,
      "author": {
        "id": 1000608
      },
      "writtenOn": "2021-10-11T18:05:38Z",
      "side": 1,
      "message": "But the agent at the voltha-core is \u0027per device\u0027. So this approach was needed. So though the API supports request for multiple devices at once, the request to the adapter are to be sent one-by-one from the core.",
      "parentUuid": "1d297156_67d47eae",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5878fe84_24e18720",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1664,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-12T12:28:31Z",
      "side": 1,
      "message": "True, but there might possibly be ways to overcome this restriction. E.g. one could use the first deviceId for the agent tranfer as usual but nevertheless include the other devices in the agent and adapter transfer. The OnuAdapter anyway has to verify validity of each device. But for now it is ok to me.",
      "parentUuid": "dbb92941_11530592",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "482f23ba_f955823e",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1667,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-11T13:07:21Z",
      "side": 1,
      "message": "As I\u0027m not aware of the complete code: Would this check here detect, that the request is not wrongly set to some OLT device?",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "702ce89a_83830d89",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1667,
      "author": {
        "id": 1000608
      },
      "writtenOn": "2021-10-11T15:08:25Z",
      "side": 1,
      "message": "No, this check only ensures that there is an agent registered(present) for this device. \n\nThe check you are stating is present here:\nhttps://gerrit.opencord.org/plugins/gitiles/voltha-go/+/refs/heads/voltha-2.8/rw_core/core/device/agent_image.go#432",
      "parentUuid": "482f23ba_f955823e",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "191692e9_2492d7a6",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1667,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-11T15:42:44Z",
      "side": 1,
      "message": "Ok, I see, so the agent will return error in this case. And this change then  ensures to return according image state indications (like in case to ONU adapter itself returns error). So we don\u0027t get any information that the request was just done to some wrong device ID - that is a bit sad, think we had some according information on voltctl with the old API\u0027s.",
      "parentUuid": "702ce89a_83830d89",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8bec526_e8d61440",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1667,
      "author": {
        "id": 1000608
      },
      "writtenOn": "2021-10-11T18:05:38Z",
      "side": 1,
      "message": "Exactly. But as of now, there is no code that indicates \u0027NOT_FOUND\u0027 (For instance). \nMoreover we shall not simply return gRPC error as there are multiple devices involved. \nSo there might be cases where the request went successfully for a few devices, but failed for some.",
      "parentUuid": "191692e9_2492d7a6",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f5ae3d5_41d4cc04",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1667,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-12T12:28:31Z",
      "side": 1,
      "message": "Yes, it would require a proto update to include an according error code for the image states.\nWe should try to keep it in mind for after some possible proto update also in respect to further adapter related state extensions.",
      "parentUuid": "e8bec526_e8d61440",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1c7cb5b_7d813333",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1667,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-10-12T14:10:11Z",
      "side": 1,
      "message": "This isn\u0027t so much as an image not found as the agent is not found? If this is the case then we shouldn\u0027t be returning NOT_FOUND as an image state error or reason as that might send an operator down a confusing pass. Unless we add a specific error agent not found (which might be a good idea) UNKNOWN_ERROR likely fits.",
      "parentUuid": "1f5ae3d5_41d4cc04",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94e253bf_5d844623",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1667,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-12T18:27:39Z",
      "side": 1,
      "message": "Since the ImageDownloadFailureReason proto has a DEVICE_BUSY field, then a DEVICE_NOT_FOUND can be added to the proto as this is the actual error being reported.",
      "parentUuid": "f1c7cb5b_7d813333",
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98a77af1_01018f1f",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1690,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-10-12T14:10:11Z",
      "side": 1,
      "message": "i would like to see the protos extended here, as opposed to UNKNOWN, but that implies that we are going to inspect the err a bit more, i.e. was it a connectivity issue, timeout, ???",
      "range": {
        "startLine": 1690,
        "startChar": 28,
        "endLine": 1690,
        "endChar": 52
      },
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "973ac6fb_7292d6b8",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1690,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-12T18:27:39Z",
      "side": 1,
      "message": "Can the proto be augmented to include the actual error that is produced?  Otherwise, a mapping is needed.  Also, an indication of which RPC fails would be informative, i.e. is it downloadImageToDevice(), validateDeviceImageResponse(), or getImageStatus()?",
      "parentUuid": "98a77af1_01018f1f",
      "range": {
        "startLine": 1690,
        "startChar": 28,
        "endLine": 1690,
        "endChar": 52
      },
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58a49bb5_32c7192a",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1690,
      "author": {
        "id": 1000608
      },
      "writtenOn": "2021-10-18T02:29:54Z",
      "side": 1,
      "message": "currently, there is no error/string field that could be used to convey the actual error \u0027as is\u0027 to the operator.\nDoes it make sense to also have a string field (in addition to the Reason) in the \u0027DeviceImageState\u0027 which can be used to send the actual error string? This could be used as an add-on.",
      "parentUuid": "973ac6fb_7292d6b8",
      "range": {
        "startLine": 1690,
        "startChar": 28,
        "endLine": 1690,
        "endChar": 52
      },
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b202c31_3617f7b3",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1740,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-10-12T14:10:11Z",
      "side": 1,
      "message": "needs to be more informative, what was not found?",
      "range": {
        "startLine": 1740,
        "startChar": 0,
        "endLine": 1740,
        "endChar": 70
      },
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "940f0370_d7e2f115",
        "filename": "rw_core/core/device/manager.go",
        "patchSetId": 2
      },
      "lineNbr": 1740,
      "author": {
        "id": 1000608
      },
      "writtenOn": "2021-10-18T02:29:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4b202c31_3617f7b3",
      "range": {
        "startLine": 1740,
        "startChar": 0,
        "endLine": 1740,
        "endChar": 70
      },
      "revId": "6d52cb2b9242a0928a88c4f8bb21060a0a872159",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    }
  ]
}